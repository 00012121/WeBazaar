@model ShoppingCartVM
@using System.Globalization
@using WeBazaar.Data.ViewModels;

@{
    ViewData["Title"] = "Shopping cart summary";
}

<div class="row">
    <div class="col-md-8 offset-2">
        <div class="text-center">
            <h2>Your shopping cart summary</h2>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Selected amount</th>
                    <th>Item</th>
                    <th>Price</th>
                    <th>Subtotal</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                {
                    <tr>
                        <td class="align-middle">@item.Amount</td>
                        <td class="align-middle">@item.Item.Name</td>
                        <td class="align-middle">@item.Item.Price.ToString("c", new CultureInfo("uz-UZ"))</td>
                        <td class="align-middle">@((item.Amount * item.Item.Price).ToString("c", new CultureInfo("uz-UZ")))</td>
                        <td>
                            <a class="text-danger" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart"
                               asp-route-id="@item.Item.Id">
                                <i class="bi bi-cart-dash"></i>
                            </a>
                            |
                            <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart"
                               asp-route-id="@item.Item.Id">
                                <i class="bi bi-cart-plus"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2"></td>
                    <td><b>Total: </b></td>
                    <td>
                        @Model.ShoppingCartTotal.ToString("c", new CultureInfo("uz-UZ"))
                    </td>
                    <td></td>
                </tr>
            </tfoot>
        </table>

        <div style="display: flex; justify-content: flex-end;">
            <div class="btn-group">
                @* <a class="btn btn-outline-primary" asp-action="CompleteOrder">
                    Complete Order
                </a> *@
                <div id="paypal-btn"></div>
                <span style="padding:5px"></span>
                <a class="btn btn-outline-success" asp-controller="Items" asp-action="Index">
                    Add more items
                </a>
            </div>
        </div>

    </div>
</div>

@* @section Scripts{
    
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

        let _total = @Html.Raw(Model.ShoppingCartTotal);

        paypal.Button.render({
            //Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AUHpzcbApKPaNDpihoi70mKXsbJld3XpTdwrJTu36HdTA7eApPZKipWF6_sWjiwe8x1Y2Ti4a6AujlL-'
            },

            //Customize button
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill'
            },
            commit: true,

            //Set-up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'UZS'
                        }
                    }]
                });
            },

            //Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    var url = '@Url.Action("CompleteOrder", "Orders", new { })';
                    window.location.href = url;
                });
            }

        }, '#paypal-btn');
    </script>
 *@
@section Scripts {

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>
        // Function to render PayPal button
        function renderPayPalButton() {
            let _total = @Html.Raw(Model.ShoppingCartTotal);

            paypal.Button.render({
                // Configure environment
                env: 'sandbox',
                client: {
                    sandbox: 'AUHpzcbApKPaNDpihoi70mKXsbJld3XpTdwrJTu36HdTA7eApPZKipWF6_sWjiwe8x1Y2Ti4a6AujlL-'
                },

                // Customize button
                locale: 'en_US',
                style: {
                    size: 'small',
                    color: 'gold',
                    shape: 'pill'
                },
                commit: true,

                // Set-up a payment
                payment: function (data, actions) {
                    return actions.payment.create({
                        transactions: [{
                            amount: {
                                total: _total,
                                currency: 'UZS'
                            }
                        }]
                    });
                },

                // Execute the payment
                onAuthorize: function (data, actions) {
                    return actions.payment.execute().then(function () {
                        var url = '@Url.Action("CompleteOrder", "Orders", new { })';
                        window.location.href = url;
                    });
                }
            }, '#paypal-btn');
        }

        // Call the function to render PayPal button initially
        renderPayPalButton();
    </script>
}
 